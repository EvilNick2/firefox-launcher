name: Build and Release Executable

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable with PyInstaller
      run: |
        pyinstaller Firefox-Launch-GUI.spec

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: firefox-launch-gui
        path: dist/Firefox-Launch-GUI.exe

  release:
    needs: build
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: firefox-launch-gui
        path: dist

    - name: Get latest tag
      id: get_latest_tag
      shell: pwsh
      run: |
        try {
          Write-Output "Fetching the latest tag..."
          $latest_tag = $(git describe --tags $(git rev-list --tags --max-count=1) 2>$null)
          if (-not $latest_tag) {
            $latest_tag = ""
          }
          Write-Output "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
        } catch {
          Write-Error "An error occurred while fetching the latest tag: $_"
          exit 1
        }

    - name: Increment tag
      id: increment_tag
      shell: pwsh
      run: |
        try {
          $latest_tag = "${{ env.latest_tag }}"
          if (-not $latest_tag) {
            $new_tag = "v1.0.0"
          } else {
            $parts = $latest_tag.TrimStart('v').Split('.')
            $major = [int]$parts[0]
            $minor = [int]$parts[1]
            $patch = [int]$parts[2]
            $new_patch = $patch + 1
            $new_tag = "v$major.$minor.$new_patch"
          }
          Write-Output "New tag: $new_tag"
          echo "new_tag=$new_tag" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
        } catch {
          Write-Error "An error occurred while incrementing the tag: $_"
          exit 1
        }

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.new_tag }}
        release_name: Firefox Launch GUI ${{ env.new_tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/Firefox-Launch-GUI.exe
        asset_name: Firefox-Launch-GUI.exe
        asset_content_type: application/octet-stream